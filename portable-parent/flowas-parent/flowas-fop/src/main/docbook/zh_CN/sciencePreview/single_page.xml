<?xml version="1.0" encoding="UTF-8"?>
<book version="5.0" xml:lang="zh_cn" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink">
	<info version="5.0" xml:lang="zh_cn" xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="info.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>原理展现</title>
	<authorgroup>		
		<author>
		    <personname>		    
		     <firstname>刘建宏</firstname>
		    </personname>			
			<address>
				<city>西安</city>
				<street>科技路</street>
				<postcode>719000</postcode>
				<country>中国</country>
			</address>
			<email>flowas@gmail.com</email>
		</author>
	</authorgroup>
	<copyright>
		<year>2010</year>
		<holder>生活实验室</holder>
	</copyright>
	<pubdate>2011</pubdate>	
</info>
	<glossary version="5.0" xml:lang="zh_cn" xml:base="glossary.xml">
	<glossentry>
		<glossterm>语义网</glossterm>
		<glossdef>
			<para> tbc                  
                </para>
		</glossdef>
	</glossentry>
	<glossentry>
		<glossterm>面向代理编程</glossterm>
		<glossdef>
			<para> tbc                  
                </para>
			<example>
				<title>NetLogo</title>
				<para>
					最好用的aop仿真创作平台，可用于角色游戏
                    </para>
			</example>
		</glossdef>
	</glossentry>
	<glossentry>
		<glossterm>科学美</glossterm>
		<glossdef>
			<example>
				<title>MathML和 SVG</title>
				<para>
					<!--
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="resources/boxes.svg" />
						</imageobject>
					</inlinemediaobject>

					 <inlinemediaobject> <imageobject> <imagedata fileref="pic.svg" 
						/> </imageobject> </inlinemediaobject> -->
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="resources/example.mml"/>
						</imageobject>
					</inlinemediaobject>
					<!--  
					==					 
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="resources/flowas.flowas" />
						</imageobject>
					</inlinemediaobject>					
					==
					-->
				</para>
			</example>
		</glossdef>
	</glossentry>
</glossary>
	<toc/>
	<chapter version="5.0" xml:base="xu.xml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title>序</title>
    <para>本书读者对象为中学生，以提高中学生的创新能力为目的，精选核心使用知识，引导中学生正确可行的人生发展方向。语言明了易懂，推理深刻透彻和简洁，知识结构系统完整，内容涵盖了数学、物理、化学、计算机、人工智能、音乐、英语和文娱领域的高级课题。本书不同于以往的谈科学不推理的科普读物，也不同于包含大量深奥难懂算式的高级教材，取其前者的简明和后者的核心理论。</para>

    <para>数学——课本上的结论我们记得不深刻，不如在上课之前研究一下，在上课时你会发现老师讲的比你发现的内容少很多很多！</para>

    <para>物理——在奇怪的物理世界里，从数学上得到的准确解已经不能信任，数学中看似无用的理论在物理的应用却引发一次又一次的科技革命。</para>

    <para>英语——不要求枯燥的记忆和联系，直接把学习带到应用的最终状态，参考原版英语文献，将其用于自己的项目中，把自己的与研究成果加工成符合规范的国际化正式文体，并在世界范围内传播。</para>

    <para>文娱——也许你从未读过这样的文章，他是小说或剧本，但内容是数学和计算机，你感觉它很熟悉又很神奇。</para>

    <para>学习本书，其实不难，只要多问这个结论是怎么来的？我凭什么信任？理论将用在哪里？下一步该如何发展？你也可以发现很多东西，本书只是举出少数几个例子。</para>

    <para>现在就业压力如此大的背景下，毕业后找工作动不动要求5年工作经验，至少三个大型项目案例，天方夜谭啊，可这都是事实，我们选择经不起错误，所以在短时间内需要认识到未来的道路和境况。为此将中学后的学习以及工作经验内容浓缩，在短时间内大体了解清楚，然后一鼓作气奋斗到底，看谁还能超越？即使不为工作，我们的事业上的竞争力也是不可低估的。</para>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="power_tower.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>幂塔运算</title>
	<info>
		<abstract>
			<para>
				当一个善于发问的学生了解了第一、二、三级运算以后，他可能很快去思考第四级运（the forth leval of
				operation -
				power tower 幂塔）的形式。事实上，幂塔可与另外一函数
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="resources/definitionEquetion.mml"/>
					</imageobject>
				</inlinemediaobject>
				建立转化关系，从而求出它的解析式.。
			</para>
		</abstract>
		<keywordset>
			<keyword>幂塔</keyword>
			<keyword>函数变换</keyword>
			<keyword>解析式</keyword>
		</keywordset>
		<issuenum>O0174.6</issuenum>
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
		<para>求解函数方程x^h(x)=h(x)可以得到如下的解：</para>
		<para>h(x)=-lambertw(0,-log(x))/log(x)</para>
		<figure>
				<title>h(x)在定义域0&gt;x上的图像</title>				
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/powertower/h_small_value.jpg" depth="9.4cm" width="14.5cm">
						</imagedata>
					</imageobject>					
				</mediaobject>
				<para>图像在x=0.0660附近出现了分支</para>
			</figure>
			<figure>
				<title>h(x)的图像</title>				
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/powertower/h_all.jpg" depth="9.4cm" width="14.5cm">
						</imagedata>
					</imageobject>					
				</mediaobject>
				<para>图像在x=1.444处出现虚数部分（红色）</para>
			</figure>
			<figure>
				<title>当x趋于无穷大时，实数部分和虚数部分都趋于零</title>				
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/powertower/h_big_value.jpg" depth="9.4cm" width="14.5cm">
						</imagedata>
					</imageobject>					
				</mediaobject>				
			</figure>
	</section>
	<section>
		<title>检索信息的动机</title>
		<para>
			我们学习基本运算法的顺序是“加减”、“乘除”、“乘方和开方”，相信很多主动学习的人思考过继续高级的“运算”--第四级运算法，以下是推导这种运算的一般步骤：
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/powertower/image008.gif" depth="9.4cm" width="14.5cm">
					</imagedata>
				</imageobject>
			</mediaobject>
			如果发现这个结论的人是小学生，那么成功的喜悦会激励他从小开始科研事业，如果他有电脑，那么可以借助电脑鉴定自己的成果--是否已经有相关内容？如果他有老师，那么老师为了帮学生解决问题也可能去查阅相关资料。如果发现这个结论的人是大学生，那么他为了争取学分会发表论文，其中收集“参考文献”的途径一般是通过“搜索引擎”，我们的“科学视化搜索引擎”将尽可能地迎合这些人的需求。大家想想看，他们理想的检索方法是什么样的？他们最容易想到的检索“关键词”是什么？
		</para>
		<para>
			<figure>
				<title>幂塔的形象设计</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/powertower/image128.gif" depth="9.4cm" width="14.5cm">
						</imagedata>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="level_operation.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>等级运算</title>
	<info>
		<abstract>
			<para>
				深入阅读“等级运算”针对不同能力级别的人有不同的效果：
				<simplelist>
					<member>小学生：可以得到启发，会去想很多深奥的东西，对后续的学习研究可以认识到一种直接的路线。</member>
					<member> 初中生：可以完成30%的创新，得到基本的数学模型和思想。</member>
					<member>高中生：可以完成60%的创新，可以推导出关键的计算方法，并且思想认识上可以得到一些转变。</member>
					<member>大学生：可以利用网络和计算机系统完成大规模计算和验证，并且将知识规范化发布。</member>
					<member>数学家：可能完成文章中为解决的计算问题。</member>
				</simplelist>
			</para>
		</abstract>
		<keywordset>
			<keyword>不可能的计算</keyword>
			<keyword>强制分割计算单位</keyword>
			<keyword>解析式</keyword>
		</keywordset>		
	</info>
	<section>
		<title>引言</title>
		<para>我们知道第一级运算为加法和减法，加法表示为
        a+b                                                  (1)
第二级运算为乘法和除法，乘法表示为
</para>
	</section>
</chapter>	
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="summation_formula.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>推导求和公式</title>
	<info>
		<abstract>
			<para>当一个善于发问的学生了解了第一、二、三级运算以后，他可能很快去思考第四级运（the forth leval of operation - power tower 幂塔）的形式。事实上，幂塔可与另外一函数 建立转化关系，从而求出它的解析式.。</para>
		</abstract>
		<keywordset>
		 <keyword>幂塔</keyword>
		 <keyword>函数变换</keyword>
		 <keyword>解析式</keyword>
		</keywordset>
		<issuenum>O0174.6</issuenum>
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
	</section>
	<section>
	 <title>鉴赏求和公式</title>
	 <para>一个出于读者意料的公式——能解决所有求和问题的公式必然会引起读者一系列的心理反应：知道了这个公式以后，真的不用学习其它求和技巧了吗？既然有如此好的公式，那为什么又不为人所知呢？然而它只能在数值上近似，并不能给出最简求和表达式。这个公式的真正魅力在于，表达式中存在一个特殊数列（Bn贝努里数）以及它的易于发现性，只要谁迷恋于通用求和法并作些简单的演算，就有可能发现，在千差万别的求和表达式中，出人意料地存在着一系列永不变的常数Bn，或直接发现此公式。</para>
	</section>
	<section>
	 <title>Bernoulli numbers摘录</title>
	 <para>The Bernoulli numbers <inlinemediaobject>
						<imageobject>
							<imagedata fileref="images/summation_formula/image056.gif"/>
						</imageobject>
					</inlinemediaobject>are a sequence of signed rational numbers that can be defined by the identity
                                <mediaobject>
									<imageobject>
										<imagedata fileref="images/summation_formula/image057.gif"/>
									</imageobject>
								</mediaobject> 

The Bernoulli number  can be defined by the contour integral 
  <mediaobject>
									<imageobject>
										<imagedata fileref="images/summation_formula/image058.gif"/>
									</imageobject>
								</mediaobject> 

The Bernoulli numbers are given by the double sum 
  <mediaobject>
									<imageobject>
										<imagedata fileref="images/summation_formula/image059.gif"/>
									</imageobject>
								</mediaobject> 
(27)


where <inlinemediaobject>
						<imageobject>
							<imagedata fileref="images/summation_formula/image060.gif"/>
						</imageobject>
					</inlinemediaobject> is a binomial coefficient.
　 
An asymptotic expansion for the even Bernoulli numbers is
       <mediaobject>
									<imageobject>
										<imagedata fileref="images/summation_formula/image061.gif"/>
									</imageobject>
								</mediaobject> 

	 </para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="innovative_study.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>知识创新与利用式的求学方式</title>
	<info>
		<abstract>
			<para>我的的求知过程实质上是对知识的创新与利用的过程。由于对数学的浓厚兴趣和自发钻研的热情，从接触数学开始，它的一个个神秘的迷团就开始了显露真相：</para>
		</abstract>
		<keywordset>
		 <keyword>幂塔</keyword>
		 <keyword>函数变换</keyword>
		 <keyword>解析式</keyword>
		</keywordset>
		<issuenum>O0174.6</issuenum>
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="hydrogen_atom.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>氢原子方程中电子轨道的奇异解</title>
	<info>
		<abstract>
			<para>由一个质子和一个电子组成，在量子力学的发展中占有重要的地位，因为这个系统可以解析求解。对于类氢离子               同样可以解析求解。</para>
		</abstract>
		<keywordset>
			<keyword>薛定谔方程</keyword>
			<keyword>不能严格导出，是一个假设</keyword>
			<keyword>正确性为大量成功应用所验证</keyword>
		</keywordset>		
	</info>
	<section>
		<title>定义</title>
		<para>
			<figure>
				<title>氢原子中电子的波动图象</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/hydrogen_atom/slide0010_image032.png" depth="4cm" width="14.5cm">
						</imagedata>
					</imageobject>
				</mediaobject>
				<simplelist>
					<member>（a）n=6是电子的驻波； </member>
					<member>（b）n不等整数，波本身互相干涉而被破坏。</member>
				</simplelist>
			</figure>
		</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="fourier_transform.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>傅里叶级数与音乐优美度判断</title>
	<info>
		<abstract>
			<para>我的的求知过程实质上是对知识的创新与利用的过程。由于对数学的浓厚兴趣和自发钻研的热情，从接触数学开始，它的一个个神秘的迷团就开始了显露真相：</para>
		</abstract>
		<keywordset>
		 <keyword>幂塔</keyword>
		 <keyword>函数变换</keyword>
		 <keyword>解析式</keyword>
		</keywordset>
		<issuenum>O0174.6</issuenum>
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="idea2manufacture.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>从构思设计到工业生产</title>
	<info>
		<abstract>
			<para>随着CAD（计算机辅助设计）技术的飞速发展，在电脑上设计出的各种部件，都可以通过先进的LAD软件直接用数控机床加工出来。无怪乎美国人可以自个儿在家里加工、制造出游艇、帆船和载人气球，而用散件自行组装小飞机、汽车、摩托车，同样不足为奇。</para>
		</abstract>
		<keywordset>
		 <keyword>CAD</keyword>
		 <keyword>计算机辅助设计</keyword>
		 <keyword>SolidWorks</keyword>
		</keywordset>		
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="persistenceEvolution.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>数据存储的不断变革</title>
	<info>
		<abstract>
			<para>计算机是如何存储信息的呢？在这里我们用一张图给您一个直观的印象：</para>
		    <para>主要描述软件开发中的核心重要思想——模型驱动开发、快速应用开发、分布式系统等的基本原理。</para>
		</abstract>
	</info>
	<section>
		<title>直接在应用程序中使用数据库操作语言</title>
		<para>在一些应用系统中,如asp网页和jdbc连接等直接在应用程序中使用sql语句，如下</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="bigsystem.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>超大系统如何构建更好？</title>
	<info>
		<abstract>
			<para>在这里，我们需要一个网站，网站有具体有什么功能我也不知道，但是我需要能搜索，能向它提出问题并得到解释，可以展示我的特长，可以找到我的知心朋友，可以和读者一块写小说，遇到困难可以找到相应的辅助系统，累了我还想玩游戏…
			</para>
			<para>首先考虑一下开发过程，我可能随时都改变随地的改变我的实现方式，可又不想破环之前的实现，这样就适合采用测试驱动开发（Test
				Driven
				Develop）,我可能还有一个测试人员，他干什么呢，让他写测试用例？嗨，需求一直在变，这样会累死他的，干脆让他只考虑尽可能多的应用场景，我把所有的场景都写在测试代码中，不管我怎么改代码，都会符合测试员找到的所有场景，这就变成了数据驱动测试(Data
				Driven Test)了。其实该考虑的问题还有很多，先看看下面的图片，然后慢慢学习:</para>
			<para>
				<figure>
					<title>项目关联图</title>

					<mediaobject>
						<imageobject>
							<imagedata fileref="images/bigsystem/bigsystem.jpg" depth="9.4cm" width="14.5cm">
							</imagedata>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
		</abstract>
	</info>
	<section>
		<title>构建系统（build）</title>
		<para>构建系统前，我需要知道我的系统是不是已经有人开发过了，或者系统中的某些特性已经有实现，有现成的我当然要用上，maven可以把所有依赖的组件（一般是.jar文件）自动下载到项目中，那么就让maven来处理此事，有时候我需要修改别人的成品，并且自动加到我的项目中，并适当修改我的项目，此事ant最擅长了，就交给ant吧。
		</para>
		<table frame="all">
			<title>主流工具</title>
			<tgroup cols="3" align="left" colsep="1" rowsep="1">
				<colspec colname="c1"/>
				<colspec colname="c2"/>
				<colspec colname="c3"/>
				<tbody>
					<row>
						<entry colsep="1">
							<figure>
								<title>ant任务</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/bigsystem/image002.gif" depth="6cm" width="3cm"/>
									</imageobject>
								</mediaobject>
							</figure>
						</entry>
						<entry namest="c2" nameend="c3">
							<figure>
								<title>maven依赖关系</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/bigsystem/image003.png" depth="6cm" width="9cm"/>
									</imageobject>
								</mediaobject>
							</figure>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<section>
			<title>maven应用</title>
			<para>
				怎么去网上下载依赖和插件？
				<figure>
					<title>搜索maven插件：checkstyle</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/maven/mavencheckstyle.png" depth="4cm" width="15cm"/>
						</imageobject>
					</mediaobject>
				</figure>
				打开上述链接找到“usage
				page”链接并打开，现在打开的地址是“http://maven.apache.org/plugins/maven-checkstyle-plugin/”，将相应代码复制到maven的配置文件中即可：
				<figure>
					<title>usage page局部</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/maven/checkstyleusage.png" depth="9cm" width="15cm"/>
						</imageobject>
					</mediaobject>
				</figure>
			</para>
			<para>
				怎么把jar包安装到本地？
				<figure>
					<title>搜索maven命令</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/maven/searchForInstallFile.png" depth="4cm" width="15cm"/>
						</imageobject>
					</mediaobject>
				</figure>
				打开链接可以看到命令格式样例代码：
				<programlisting>
					mvn install:install-file
					-Dfile=path-to-commons-logging-sources.jar \
					-DgroupId=commons-logging \
					-DartifactId=commons-logging \
					-Dversion=1.0.3 \
					-Dpackaging=jar \
					-Dclassifier=sources
				</programlisting>
			</para>
			<para>怎么发布成品？</para>
			<para>站点生成</para>
			<para>通过原型构建</para>
			<para>支持快速开发</para>
		</section>
	</section>
	<section>
		<title>生成代码</title>
		<para>建一个模型，自动生成相关代码</para>
		<para>改变模型，关联代码自动适应修改</para>
	</section>
	<section>
		<title>检查代码</title>
		<para>
			checkstyle
		</para>
	</section>
	<section>
		<title>测试代码</title>
		<figure>
			<title>测试关联图</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/bigsystem/test.jpg" depth="8cm" width="13cm"/>
				</imageobject>
			</mediaobject>
		</figure>
		<para>
			其中PowerMock和AspectJ是用来模拟不存在的环境
			Concordion是在规格文档中写测试，测试结果也出现在规格文档中，系统是不是符合设计，一看测试结果便知。
			Arquillian让依赖注入标识可以写在测试代码中，让测试运行于服务器中。		 
		</para>
		<para>
			<figure>
				<title>测试驱动开发过程</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/bigsystem/tddProgress.png" depth="8cm" width="13cm"/>
					</imageobject>
				</mediaobject>
			</figure>
			在开发大型系统时，由于部署和启动等操作非常费时，所以很多系统采用OSGI技术来提高更新代码的验证速度。
		</para>
	</section>
	<section>
		<title>团队协作</title>
		<para>
			在网页中浏览代码，看到哪里不正确，可以马上修改。s
		</para>
	</section>
	<section>
		<title>运行系统</title>
		<figure>
			<title>运行关联图</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/bigsystem/run.jpg" depth="6cm" width="9cm"/>
				</imageobject>
			</mediaobject>
		</figure>
	</section>
	<section>
		<title>需求规格</title>
		<para>
			一个特性包含在一组jar包中
			A、flowas-security.jar,flowas-shopping.jar,flowas-search.jar组成购物网站。
			B、flowas-security.jar,flowas-novel.jar,flowas-semantic.jar组成文学网站。
			C、中文分词，语义推理等占用内存的jar包放在不同的服务器运行。	  
	 </para>
	</section>
	<section>
		<title>持续集成</title>
		<para>
			每8分钟检查一次,如果有代码更新，就启动构建，若失败通知开发者，知道成功。
	  </para>
	</section>
	<section>
		<title>建议</title>
		<para>
			1.
			内容不在于多也不在于多么神秘，不要追求高一些大家都不知道和不会的东西。要做到他们都需要了解一下，但是不是很深入，高级特性不知道等等。
			2.
			SOA
			云计算等等，都可以纳入其中，这些东西，大家很感兴趣，但是又都不会。要抓住人们的认知方向，高一些大家闻所未闻的所谓技术，人们是没有兴趣的 。
			3. 要讲的通俗易懂，个人建议 多一些WEB方面的技术，这些在网络招聘信息中要求很多，当然大家也都了解一些这方面的知识，也很乐于去学习。
			4. 先把流行技术统统给介绍和特另外大家不会的知识讲述一下，从简入深，深入浅出，看一下人家出版社出的那些书是怎么编排的。
			5.
			技术选型，你可以自己在网络上面查找。	 
	 </para>
	</section>
</chapter>	
	<chapter version="5.0" xml:base="computerCanDo.xml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title>计算机的能力</title>

  <section>
    <title>分析一个汉语句子的语法结构</title>

    <para>以下是用到斯坦福大学的自然语言解析工具包将”俄国 希望 伊朗 没有 制造 核武器 计划 。”解析为一颗语法树：<figure>
        <title>语法树</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/image001.jpg"/>
          </imageobject>
        </mediaobject>
      </figure></para>
      <para>
      “S”表示一个句子，一句话可以分成名词短语和动词短语</para><para>
“NP”表示名词短语</para><para>
“VP”表示动词短语
      </para>
  </section>
  <section>
    <title>阅读、理解和检索助手</title>
    <sect1>人物关系图绘制和相关咨询</sect1>
    <sect1>Google的神奇罗盘——联想</sect1>
    <sect1>百度的框计算</sect1>
  </section>
  <section>
   <title>写不错英语的写作输入器</title>
  </section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="love_source.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>缘分从何而来？商机如何创造？</title>
	<info>
		<abstract>
			<para>
				你把他的电话告诉我，我帮你搞定。				
			</para>
		</abstract>
	</info>
	<section>
		<title>引言</title>
		<para>			
			<figure>
				<title>寻爱流程图</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="resources/images/lovesource2.jpg" depth="9.4cm" width="14.5cm">
						</imagedata>
					</imageobject>
				</mediaobject>
			</figure>
		</para>
	</section>
</chapter>	
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="gamma_function.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>Gamma Function</title>
	<info>
		<abstract>
			<para>当一个善于发问的学生了解了第一、二、三级运算以后，他可能很快去思考第四级运（the forth leval of operation - power tower 幂塔）的形式。事实上，幂塔可与另外一函数 建立转化关系，从而求出它的解析式.。</para>
		</abstract>
		<keywordset>
		 <keyword>幂塔</keyword>
		 <keyword>函数变换</keyword>
		 <keyword>解析式</keyword>
		</keywordset>
		<issuenum>O0174.6</issuenum>
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
	</section>
</chapter>
	<chapter xsi:schemaLocation="http://docbook.org/ns/docbook ../../xsd/docbook.xsd " xml:base="carbon_nanotube.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<title>Carbon nanotube</title>
	<info>
		<abstract>
			<para>当一个善于发问的学生了解了第一、二、三级运算以后，他可能很快去思考第四级运（the forth leval of operation - power tower 幂塔）的形式。事实上，幂塔可与另外一函数 建立转化关系，从而求出它的解析式.。</para>
		</abstract>
		<keywordset>
		 <keyword>幂塔</keyword>
		 <keyword>函数变换</keyword>
		 <keyword>解析式</keyword>
		</keywordset>
		<issuenum>O0174.6</issuenum>
	</info>
	<section>
		<title>定义</title>
		<para>幂塔[1]运算的定义为</para>
	</section>
</chapter>		
</book>
